<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<id>https://fabmoll.github.io/</id>
	<title>Fabrice Moll</title>
	<link rel="self" href="https://fabmoll.github.io/" />
	<rights>2021</rights>
	<updated>2021-01-06T10:02:35Z</updated>
	<subtitle>Hey! Welcome.</subtitle>
	<entry>
		<id>https://fabmoll.github.io/posts/HowToDisplayDeviceNameInYourPiHole</id>
		<title>How to display device name in your Pi-hole</title>
		<link href="https://fabmoll.github.io/posts/HowToDisplayDeviceNameInYourPiHole" />
		<updated>2021-01-03T00:00:00Z</updated>
		<content>&lt;p&gt;When your &lt;a href="https://pi-hole.net/" target="_blank"&gt;Pi-hole&lt;/a&gt; doesn't act as a DHCP server (because you already have another one) you'll able to see only the IP addresses of the devices.&lt;/p&gt;
&lt;p&gt;Not really user-friendly when you need to analyze the log of the Pi-Hole.&lt;/p&gt;
&lt;p&gt;But don't be afraid, there is a &lt;span style="color:green"&gt;solution&lt;/span&gt;!&lt;/p&gt;
&lt;p&gt;To be able to see the device name, you just need to enable the &lt;strong&gt;Use Conditional Forwarding&lt;/strong&gt; setting in the Settings - DNS.&lt;/p&gt;
&lt;p style="text-align:center;"&gt;
&lt;img src="../images/HowtodisplaydevicenameinyourPi-hole.jpg" alt="Enable Use Conditional Forwarding" align="center"/&gt;&lt;/p&gt;
&lt;p&gt;When the option is enabled, enter the local network to use and the IP address of your DHCP server as described in the screenshot, save and it's done. It's magic.&lt;/p&gt;
</content>
		<summary>&lt;p&gt;When your &lt;a href="https://pi-hole.net/" target="_blank"&gt;Pi-hole&lt;/a&gt; doesn't act as a DHCP server (because you already have another one) you'll able to see only the IP addresses of the devices.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://fabmoll.github.io/posts/AcceptDNSQueriesToSpecificIPAddressesWithinYourDreamMachinePro</id>
		<title>Accept DNS queries to specific IP addresses within your Dream Machine Pro</title>
		<link href="https://fabmoll.github.io/posts/AcceptDNSQueriesToSpecificIPAddressesWithinYourDreamMachinePro" />
		<updated>2020-12-27T00:00:00Z</updated>
		<content>&lt;p&gt;Holidays are nice when you want to try something new.&lt;br /&gt;
In my case, I wanted to install a &lt;a href="https://pi-hole.net/" target="_blank"&gt;Pi-Hole&lt;/a&gt;.&lt;br /&gt;
If you never heard about Pi-Hole, it's a DNS sinkhole that protects your devices from unwanted content, without installing any client-side software.&lt;/p&gt;
&lt;p&gt;My post isn't a &lt;em&gt;How-to&lt;/em&gt; install/configure/... the thing.&lt;br /&gt;
Here we'll see how to create firewall rules on the Dream Machine Pro to refuse all DNS queries except the one to the Pi-Hole.&lt;/p&gt;
&lt;p&gt;The first thing to do is to create two groups in the firewall settings.&lt;/p&gt;
&lt;p&gt;One to specify the DNS port to block (53) and another one to contain the IP addresses that will be used to accept DNS queries (The Pi-Hole address and maybe some other DNS addresses).&lt;/p&gt;
&lt;p&gt;I use groups to be able to add/remove address or port as I wish.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;First group&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Name: DNS Port&lt;/li&gt;
&lt;li&gt;Type: Port&lt;/li&gt;
&lt;li&gt;Port value: 53&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Second group&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Name: DNS to Accept&lt;/li&gt;
&lt;li&gt;Type: Address IPV4&lt;/li&gt;
&lt;li&gt;Address: The address of your PI-Hole and maybe some other public DNS addresses&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When it's done, we need to create two firewall rules.  One to block all outbound traffic to the port 53 and another one to accept all outbound traffic to the port 53 but only for the addresses we trust.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;First rule&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Name: Accept DNS Group&lt;/li&gt;
&lt;li&gt;Rule applied: Before predefined rules&lt;/li&gt;
&lt;li&gt;Action: Accept&lt;/li&gt;
&lt;li&gt;Source Type: Address/Port group&lt;/li&gt;
&lt;li&gt;Source IPv4 Address Group: Any&lt;/li&gt;
&lt;li&gt;Source Port Group: Any&lt;/li&gt;
&lt;li&gt;Destination Type: Address/Port group&lt;/li&gt;
&lt;li&gt;Destination IPv4 Address Group: DNS to Accept (the second group we created)&lt;/li&gt;
&lt;li&gt;Destination Port Group: DNS Port (the first group we created)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Second rule&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Name: Drop other DNS&lt;/li&gt;
&lt;li&gt;Rule applied: Before predefined rules&lt;/li&gt;
&lt;li&gt;Action: Drop&lt;/li&gt;
&lt;li&gt;Source Type: Address/Port group&lt;/li&gt;
&lt;li&gt;Source IPv4 Address Group: Any&lt;/li&gt;
&lt;li&gt;Source Port Group: Any&lt;/li&gt;
&lt;li&gt;Destination Type: Address/Port group&lt;/li&gt;
&lt;li&gt;Destination IPv4 Address Group: Any&lt;/li&gt;
&lt;li&gt;Destination Port Group: DNS Port (the first group we created)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With these rules, the devices connected to our LAN will only use the DNS we trust and if a malware tries to bypass our DNS, it will be blocked by the second firewall rule.&lt;/p&gt;
</content>
		<summary>&lt;p&gt;Holidays are nice when you want to try something new.&lt;br&gt;
In my case, I wanted to install a &lt;a href="https://pi-hole.net/" target="_blank"&gt;Pi-Hole&lt;/a&gt;.&lt;br&gt;
If you never heard about Pi-Hole, it's a DNS sinkhole that protects your devices from unwanted content, without installing any client-side software.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://fabmoll.github.io/posts/ChangeProximusInternetPassword</id>
		<title>Change Proximus Internet password</title>
		<link href="https://fabmoll.github.io/posts/ChangeProximusInternetPassword" />
		<updated>2020-12-24T00:00:00Z</updated>
		<content>&lt;p&gt;In some cases you'll handle the PPPoE connection in your router.&lt;br /&gt;
The main reason is to connect to the Proximus network from your router and let your personal hardware manage the DHCP.&lt;/p&gt;
&lt;p&gt;If you know your login and password, it's really easy.  But if like me, you lost your original password / don't remember it / never saved it in your favorite password tool / ... you're doomed.  Or not.&lt;/p&gt;
&lt;p&gt;Proximus made it simple, you can login on their website and in the MyProducts section you need to select your &amp;quot;Internet&amp;quot; product.&lt;br /&gt;
From there you'll be able to define a new password without the need to enter your old password.&lt;/p&gt;
&lt;p style="text-align:center;"&gt;
&lt;img src="../images/ChangeProximusInternetPassword-ProximusLogin.jpg" alt="Proximus Password change" align="center"/&gt;&lt;/p&gt;
&lt;p&gt;When the password is changed, it will take effect within two hours.&lt;/p&gt;
&lt;p&gt;My first error was to change it too in my modem -&amp;gt; No more Internet at home.&lt;br /&gt;
In fact you can use the old password as long as Proximus didn't validate your new password.&lt;/p&gt;
&lt;p&gt;Two hours later... No Internet!&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://en.wikipedia.org/wiki/Wife_acceptance_factor" target="_blank"&gt;WAF&lt;/a&gt; was aligned with the two hours but not with more.&lt;/p&gt;
&lt;p&gt;I had two solutions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Try a new password on Proximus website (and wait two more hours)&lt;/li&gt;
&lt;li&gt;Contact the Support&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I don't remember my web search but I found a ticket about the PPPoE connection with the Proximus modem and the new password rule.&lt;br /&gt;
In fact, the new password &lt;strong&gt;must be eight characters long and it must only contain alphanumeric characters&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The thing I didn't say is that I used a password generator to have something complex on my first try.&lt;/p&gt;
&lt;p&gt;So before to call the Support, I changed my password to match the rule (on Proximus website and in my router) and it worked right away.&lt;/p&gt;
</content>
		<summary>&lt;p&gt;In some cases you'll handle the PPPoE connection in your router.&lt;br&gt;
The main reason is to connect to the Proximus network from your router and let your personal hardware manage the DHCP.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://fabmoll.github.io/posts/ChangeStatusBarColorInXamarinForms</id>
		<title>Change the status bar color in your Xamarin.Forms app</title>
		<link href="https://fabmoll.github.io/posts/ChangeStatusBarColorInXamarinForms" />
		<updated>2020-10-05T00:00:00Z</updated>
		<content>&lt;p&gt;It's the second time I need to change the status bar color in a Xamarin.Forms (Android) and I didn't remember how to do it.&lt;/p&gt;
&lt;p&gt;As I don't want to search it again, I decided to add the information here.&lt;/p&gt;
&lt;p&gt;The status bar is the top part of the application where you can find the battery level, the network status,...&lt;/p&gt;
&lt;p style="text-align:center;"&gt;
&lt;img src="../images/ChangeStatusBarColorInXamarinForms.jpg" alt="Folder structure" align="center"/&gt;&lt;/p&gt;
&lt;p&gt;In your Android project, just add the following line in the styles.xml file and use the color you like:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;item name=&amp;quot;android:statusBarColor&amp;quot;&amp;gt;#3F4550&amp;lt;/item&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</content>
		<summary>&lt;p&gt;It's the second time I need to change the status bar color in a Xamarin.Forms (Android) and I didn't remember how to do it.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://fabmoll.github.io/posts/FrameHeightRequestNotApplied</id>
		<title>Frame HeightRequest not applied</title>
		<link href="https://fabmoll.github.io/posts/FrameHeightRequestNotApplied" />
		<updated>2020-01-16T00:00:00Z</updated>
		<content>&lt;p&gt;For each of my items in the ListView, I wanted to display the title of the show and the remaining episodes.&lt;br /&gt;
But it can be really difficult to see the label on an image.&lt;/p&gt;
&lt;p&gt;A solution I used in my previous Windows Phone app was to add a border with a background color. So I decided to use the same tip with the &lt;strong&gt;Frame&lt;/strong&gt; control.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;&amp;lt;Frame Grid.Row=&amp;quot;0&amp;quot; HeightRequest=&amp;quot;22&amp;quot; VerticalOptions=&amp;quot;End&amp;quot;  BackgroundColor=&amp;quot;#80000000&amp;quot; &amp;gt;
    &amp;lt;StackLayout Orientation=&amp;quot;Horizontal&amp;quot;&amp;gt;
        &amp;lt;Label Grid.Row=&amp;quot;0&amp;quot;  Text=&amp;quot;{Binding Title}&amp;quot; TextColor=&amp;quot;#FFFFFF&amp;quot; Margin=&amp;quot;5,0,0,0&amp;quot; LineBreakMode=&amp;quot;TailTruncation&amp;quot; 
                    HorizontalOptions=&amp;quot;StartAndExpand&amp;quot; FontAttributes=&amp;quot;Bold&amp;quot; FontSize=&amp;quot;Subtitle&amp;quot;/&amp;gt;
        &amp;lt;Label Grid.Row=&amp;quot;0&amp;quot;  Text=&amp;quot;{Binding User.Remaining}&amp;quot; TextColor=&amp;quot;#FFFFFF&amp;quot; Margin=&amp;quot;0,0,5,0&amp;quot; HorizontalOptions=&amp;quot;End&amp;quot; 
                    FontAttributes=&amp;quot;Bold&amp;quot; FontSize=&amp;quot;Subtitle&amp;quot; /&amp;gt;
    &amp;lt;/StackLayout&amp;gt;
&amp;lt;/Frame&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p style="text-align:center;"&gt;
&lt;img src="../images/FrameHeightRequestnotappliedBadHeightRequest.jpg" alt="Wrong HeightRequest" align="center"/&gt;&lt;/p&gt;
As you can see, the HeightRequest seems to be ignored. It's bigger than expected. In fact, the Frame control has a &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/Xamarin.Forms.Frame?view=xamarin-forms" target="_blank"&gt;default padding&lt;/a&gt; of 20.
&lt;p&gt;To have the expected result, you just need to set the Frame's &lt;strong&gt;Padding to 0&lt;/strong&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;&amp;lt;Frame Grid.Row=&amp;quot;0&amp;quot; HeightRequest=&amp;quot;22&amp;quot; VerticalOptions=&amp;quot;End&amp;quot;  BackgroundColor=&amp;quot;#80000000&amp;quot; Padding=&amp;quot;0&amp;quot;&amp;gt;
    &amp;lt;StackLayout Orientation=&amp;quot;Horizontal&amp;quot;&amp;gt;
        &amp;lt;Label Grid.Row=&amp;quot;0&amp;quot;  Text=&amp;quot;{Binding Title}&amp;quot; TextColor=&amp;quot;#FFFFFF&amp;quot; Margin=&amp;quot;5,0,0,0&amp;quot; LineBreakMode=&amp;quot;TailTruncation&amp;quot; 
                    HorizontalOptions=&amp;quot;StartAndExpand&amp;quot; FontAttributes=&amp;quot;Bold&amp;quot; FontSize=&amp;quot;Subtitle&amp;quot;/&amp;gt;
        &amp;lt;Label Grid.Row=&amp;quot;0&amp;quot;  Text=&amp;quot;{Binding User.Remaining}&amp;quot; TextColor=&amp;quot;#FFFFFF&amp;quot; Margin=&amp;quot;0,0,5,0&amp;quot; HorizontalOptions=&amp;quot;End&amp;quot; 
                    FontAttributes=&amp;quot;Bold&amp;quot; FontSize=&amp;quot;Subtitle&amp;quot; /&amp;gt;
    &amp;lt;/StackLayout&amp;gt;
&amp;lt;/Frame&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And now the HeightRequest defined is applied.&lt;/p&gt;
&lt;p style="text-align:center;"&gt;
&lt;img src="../images/FrameHeightRequestnotappliedGoodHeightRequest.jpg" alt="Wrong HeightRequest" align="center"/&gt;&lt;/p&gt;
</content>
		<summary>&lt;p&gt;For each of my items in the ListView, I wanted to display the title of the show and the remaining episodes.&lt;br&gt;
But it can be really difficult to see the label on an image.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://fabmoll.github.io/posts/SyntaxHighlightingInWyam</id>
		<title>Syntax Highlighting In Wyam</title>
		<link href="https://fabmoll.github.io/posts/SyntaxHighlightingInWyam" />
		<updated>2020-01-05T00:00:00Z</updated>
		<content>&lt;p&gt;In my previous blog &lt;a href="/posts/RowHeightInListViewItemTemplate"&gt;post&lt;/a&gt; I saw that the syntax highlighting was weird on a phone.&lt;br /&gt;
A carriage return was added automatically instead of taking advantage of the &lt;em&gt;power&lt;/em&gt; of a scrollbar.&lt;/p&gt;
&lt;p style="text-align:center;"&gt;
&lt;img src="../images/SyntaxHighlightingInWyamCarriageReturn.jpg" alt="Syntax with carriage return" align="center"/&gt;&lt;/p&gt;
To avoid the carriage return and let the scrollbar work as expected we need to override the CSS with the following style:
&lt;pre&gt;&lt;code class="language-css"&gt;pre code {
        white-space: pre;
        word-wrap: normal;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Just create the following folder structure in your input directory, create a file named &lt;strong&gt;override.css&lt;/strong&gt; and add the &lt;strong&gt;pre code&lt;/strong&gt; style in it.&lt;/p&gt;
&lt;p style="text-align:center;"&gt;
&lt;img src="../images/SyntaxHighlightingInWyamFolderStructure.jpg" alt="Folder structure" align="center"/&gt;&lt;/p&gt;
Build your blog and start the preview to see the result.
&lt;p style="text-align:center;"&gt;
&lt;img src="../images/SyntaxHighlightingInWyamWiithScrollbar.jpg" alt="Folder structure" align="center"/&gt;&lt;/p&gt;
</content>
		<summary>&lt;p&gt;In my previous blog &lt;a href="/posts/RowHeightInListViewItemTemplate"&gt;post&lt;/a&gt; I saw that the syntax highlighting was weird on a phone.&lt;br&gt;
A carriage return was added automatically instead of taking advantage of the &lt;em&gt;power&lt;/em&gt; of a scrollbar.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://fabmoll.github.io/posts/RowHeightInListViewItemTemplate</id>
		<title>Row height in ListView ItemTemplate</title>
		<link href="https://fabmoll.github.io/posts/RowHeightInListViewItemTemplate" />
		<updated>2020-01-04T00:00:00Z</updated>
		<content>&lt;p&gt;In my App I wanted to have a view for my TV shows.&lt;br /&gt;
As I have a WPF and Windows Phone background, I tried to set the row height on the Grid RowDefinition.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;&amp;lt;ListView ItemsSource=&amp;quot;{Binding Shows}&amp;quot; VerticalOptions=&amp;quot;FillAndExpand&amp;quot; &amp;gt;
    &amp;lt;ListView.ItemTemplate&amp;gt;
        &amp;lt;DataTemplate&amp;gt;
            &amp;lt;ViewCell&amp;gt;
                &amp;lt;Grid&amp;gt;
                    &amp;lt;Grid.ColumnDefinitions&amp;gt;
                         &amp;lt;ColumnDefinition Width=&amp;quot;*&amp;quot;/&amp;gt;
                    &amp;lt;/Grid.ColumnDefinitions&amp;gt;
                    &amp;lt;Grid.RowDefinitions&amp;gt;								
                         &amp;lt;RowDefinition Height=&amp;quot;100&amp;quot;/&amp;gt;
                    &amp;lt;/Grid.RowDefinitions&amp;gt;
                    
                    &amp;lt;ffimageloading:CachedImage Grid.Row=&amp;quot;0&amp;quot; Source=&amp;quot;{Binding Image.Banner}&amp;quot;
                        Aspect=&amp;quot;AspectFill&amp;quot;							
                        RetryCount= &amp;quot;3&amp;quot;
                        RetryDelay= &amp;quot;600&amp;quot;
                        HeightRequest=&amp;quot;100&amp;quot;
                        DownsampleToViewSize = &amp;quot;true&amp;quot;	/&amp;gt;
                        
                    &amp;lt;Frame Grid.Row=&amp;quot;0&amp;quot; HeightRequest=&amp;quot;20&amp;quot; VerticalOptions=&amp;quot;End&amp;quot; Padding=&amp;quot;0&amp;quot;
                        BackgroundColor=&amp;quot;#80000000&amp;quot; &amp;gt;
                        &amp;lt;StackLayout Orientation=&amp;quot;Horizontal&amp;quot;&amp;gt;
                            &amp;lt;Label Grid.Row=&amp;quot;0&amp;quot;  Text=&amp;quot;{Binding Title}&amp;quot; TextColor=&amp;quot;#FFFFFF&amp;quot; Margin=&amp;quot;5,0,0,0&amp;quot;
                            LineBreakMode=&amp;quot;TailTruncation&amp;quot; HorizontalOptions=&amp;quot;StartAndExpand&amp;quot;/&amp;gt;
                            &amp;lt;Label Grid.Row=&amp;quot;0&amp;quot;  Text=&amp;quot;{Binding User.Remaining}&amp;quot; TextColor=&amp;quot;#FFFFFF&amp;quot;
                            Margin=&amp;quot;0,0,5,0&amp;quot; HorizontalOptions=&amp;quot;End&amp;quot;/&amp;gt;
                        &amp;lt;/StackLayout&amp;gt;
                    &amp;lt;/Frame&amp;gt;
                &amp;lt;/Grid&amp;gt;
            &amp;lt;/ViewCell&amp;gt;
        &amp;lt;/DataTemplate&amp;gt;
    &amp;lt;/ListView.ItemTemplate&amp;gt;
&amp;lt;/ListView&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But the result was completely wrong. The black frame is too big and the show title is not displayed.&lt;/p&gt;
&lt;p style="text-align:center;"&gt;
&lt;img src="../images/RowHeightInListViewItemTemplate-WrongHeight.jpg" alt="WrongRowHeight" align="center"/&gt;&lt;/p&gt;
&lt;p&gt;I tried to change the row definition of the Grid to &lt;strong&gt;Auto&lt;/strong&gt; and let the image take the needed height but the result was the same.&lt;/p&gt;
&lt;p&gt;In fact, you have to set the &lt;strong&gt;HasUnevenRows&lt;/strong&gt; property of the ListView to &lt;strong&gt;True&lt;/strong&gt; to force the row height otherwise the ListView will use his default row height size (and the behaviour will be really strange).&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;&amp;lt;ListView ItemsSource=&amp;quot;{Binding Shows}&amp;quot;  VerticalOptions=&amp;quot;FillAndExpand&amp;quot; HasUnevenRows=&amp;quot;True&amp;quot; &amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For iOS, I read that you have to set the &lt;strong&gt;RowHeight&lt;/strong&gt; on the ListView or the size will be ignored. I couldn't verify the behaviour but since my items have the same height, I can set the &lt;strong&gt;RowHeight&lt;/strong&gt; property on the ListView and remove the &lt;strong&gt;HasUnevenRows&lt;/strong&gt; property to use its default value (False).&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;&amp;lt;ListView ItemsSource=&amp;quot;{Binding Shows}&amp;quot;  VerticalOptions=&amp;quot;FillAndExpand&amp;quot; RowHeight=&amp;quot;100&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And here is the result:&lt;/p&gt;
&lt;p style="text-align:center;"&gt;
&lt;img src="../images/RowHeightInListViewItemTemplate-GoodHeight.jpg" alt="WrongRowHeight" align="center"/&gt;&lt;/p&gt;
</content>
		<summary>&lt;p&gt;In my App I wanted to have a view for my TV shows.&lt;br&gt;
As I have a WPF and Windows Phone background, I tried to set the row height on the Grid RowDefinition.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://fabmoll.github.io/posts/first-post</id>
		<title>A new adventure</title>
		<link href="https://fabmoll.github.io/posts/first-post" />
		<updated>2019-11-19T00:00:00Z</updated>
		<content>&lt;p&gt;Yeah! The first post.&lt;br /&gt;
I really wanted to start my blog and I finally decided to install everything to do so.&lt;br /&gt;
Even if you only see a simple page, I had a fun time with my Azure Pipeline.&lt;/p&gt;
&lt;p&gt;The source code of my blog is hosted on &lt;a href="https://azure.microsoft.com/en-us/services/devops/" target="_blank"&gt;Azure DevOps&lt;/a&gt; and with one push to the Git repository, the Pipeline compiles my blog and publishes the result automatically to my GitHub Pages. It's magic!&lt;br /&gt;
Like you can see, there are still several things to configure on this blog but if I don't start now I'll never start!&lt;br /&gt;
Enjoy ;)&lt;/p&gt;
</content>
		<summary>&lt;p&gt;Yeah! The first post.&lt;br&gt;
I really wanted to start my blog and I finally decided to install everything to do so.&lt;br&gt;
Even if you only see a simple page, I had a fun time with my Azure Pipeline.&lt;/p&gt;</summary>
	</entry>
</feed>